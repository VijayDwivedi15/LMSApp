//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LMSAPP
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LMSDB2018Entities : DbContext
    {
        public LMSDB2018Entities()
            : base("name=LMSDB2018Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TimeTable> TimeTables { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<View_GetBill> View_GetBill { get; set; }
    
        public virtual int AddCustomer(Nullable<long> customerID, string address, Nullable<long> mobileNo, byte[] photo, byte[] idCard, string idCardNo, string customerName)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var mobileNoParameter = mobileNo.HasValue ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(long));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(byte[]));
    
            var idCardParameter = idCard != null ?
                new ObjectParameter("IdCard", idCard) :
                new ObjectParameter("IdCard", typeof(byte[]));
    
            var idCardNoParameter = idCardNo != null ?
                new ObjectParameter("IdCardNo", idCardNo) :
                new ObjectParameter("IdCardNo", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCustomer", customerIDParameter, addressParameter, mobileNoParameter, photoParameter, idCardParameter, idCardNoParameter, customerNameParameter);
        }
    
        public virtual int AddRoom(string roomNo, string roomType, Nullable<decimal> rate)
        {
            var roomNoParameter = roomNo != null ?
                new ObjectParameter("RoomNo", roomNo) :
                new ObjectParameter("RoomNo", typeof(string));
    
            var roomTypeParameter = roomType != null ?
                new ObjectParameter("RoomType", roomType) :
                new ObjectParameter("RoomType", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRoom", roomNoParameter, roomTypeParameter, rateParameter);
        }
    
        public virtual ObjectResult<GetBill_Result> GetBill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBill_Result>("GetBill");
        }
    }
}
